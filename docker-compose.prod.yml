version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: cmt
      POSTGRES_USER: cmt
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?set POSTGRES_PASSWORD in .env.prod}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 -p 5432 -q || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    restart: unless-stopped

  backend:
    build: ./app/backend
    command: >
      uvicorn main:app --host 0.0.0.0 --port 8000
      --proxy-headers --forwarded-allow-ips="*"
    environment:
      DATABASE_URL: postgresql+psycopg2://cmt:${POSTGRES_PASSWORD}@db:5432/cmt
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      FORWARDED_ALLOW_IPS: "*"
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys; urllib.request.urlopen('http://127.0.0.1:8000/healthz',timeout=3); sys.exit(0)\" || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 25s

  worker:
    build: ./app/backend
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      DATABASE_URL: postgresql+psycopg2://cmt:${POSTGRES_PASSWORD}@db:5432/cmt
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped

  beat:
    build: ./app/backend
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      DATABASE_URL: postgresql+psycopg2://cmt:${POSTGRES_PASSWORD}@db:5432/cmt
      REDIS_URL: redis://redis:6379/0
    depends_on:
      worker:
        condition: service_started
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    depends_on:
      backend:
        condition: service_started
    ports:
      - "443:443"
      # - "80:80"
    volumes:
      - ./app/frontend/dist:/usr/share/nginx/html:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nginx -t || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  db-data:
