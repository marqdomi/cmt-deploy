# nginx/nginx.conf (host)
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    client_max_body_size 50m;
    gzip on;
    gzip_types text/plain text/css application/javascript application/json application/xml;

    resolver 127.0.0.11 ipv6=off valid=10s;

    server {
        listen 443 ssl;
        server_name puswgiprbamar01.int.audatex.com;

        ssl_certificate     /etc/nginx/certs/selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/selfsigned.key;

        # --- API proxy ---
        location ~ ^/api(?:/api)?/(.*)$ {
            # Construye la ruta a enviar al backend con un SOLO /api
            set $upstream_path /api/$1;

            proxy_pass         http://backend:8000$upstream_path;
            proxy_http_version 1.1;

            # Cabeceras necesarias
            proxy_set_header   Host               $host;
            proxy_set_header   X-Real-IP          $remote_addr;
            proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto  $scheme;

            # MUY importante para Bearer token:
            proxy_set_header   Authorization      $http_authorization;
            proxy_pass_request_headers on;

            proxy_redirect off;
        }

        # --- Frontend estático ---
        location / {
            root   /usr/share/nginx/html;
            index  index.html;

            # Reescribe “localhost:8000” -> “/api”
            sub_filter_once off;
            sub_filter 'http://localhost:8000'  '/api';
            sub_filter 'https://localhost:8000' '/api';
            sub_filter_types text/html application/javascript text/javascript text/css application/json;

            try_files $uri /index.html;
        }
    }
}