worker_processes  1;

events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;

  sendfile on;

  # compresión básica
  gzip on;
  gzip_types text/plain text/css application/javascript application/json application/xml;

  # resolver interno de Docker
  resolver 127.0.0.11 ipv6=off valid=10s;

  # --- Redirect HTTP to HTTPS ---
  server {
    listen 80;
    server_name puswgiprbamar01.int.audatex.com;
    return 301 https://$server_name$request_uri;
  }

  # --- servidor HTTPS único ---
  server {
    listen 443 ssl;
    server_name puswgiprbamar01.int.audatex.com;

    ssl_certificate     /etc/nginx/certs/selfsigned.crt;
    ssl_certificate_key /etc/nginx/certs/selfsigned.key;
    
    # Security headers to force HTTPS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "upgrade-insecure-requests" always;

    # ===== API proxy =====
    location /api/ {
      # Redirige la petición al servicio 'backend' en el puerto 8000
      proxy_pass http://backend:8000;

      # Headers cruciales para que el backend sepa que está detrás de un proxy
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # Timeouts for long-running operations like certificate cleanup
      proxy_connect_timeout 60s;
      proxy_send_timeout 300s;
      proxy_read_timeout 300s;
      
      # Necesario para WebSockets si los usas en el futuro
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    # ===== Healthcheck externo simple (no toca backend) =====
    location = /healthz {
      add_header Content-Type text/plain;
      return 200 "ok\n";
    }

    # ===== Frontend Static Files =====
    root   /usr/share/nginx/html;
    index  index.html;

    # Fallback para SPA
    location / {
      try_files $uri $uri/ /index.html;
    }
  }
}